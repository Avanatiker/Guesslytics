// ==UserScript==
// @name         guesslytics
// @namespace    https://github.com/Avanatiker/Guesslytics
// @version      0.1.0
// @description  Tracks your GeoGuessr competitive duel ratings over time and displays it in a graph
// @author       Constructor
// @match        https://www.geoguessr.com/multiplayer
// @connect      game-server.geoguessr.com
// @grant        GM_xmlhttpRequest
// @grant        GM_setValue
// @grant        GM_getValue
// @grant        GM_addStyle
// @require      https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js
// @require      https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns@3.0.0/dist/chartjs-adapter-date-fns.bundle.min.js
// @updateURL    https://github.com/Avanatiker/Guesslytics/raw/main/guesslytics.user.js
// @downloadURL  https://github.com/Avanatiker/Guesslytics/raw/main/guesslytics.user.js
// ==/UserScript==
(function(){let e=`guesslyticsSettings`,t=`guesslyticsRatingHistory`,n=`guesslyticsBackfillState`,r={statsTimeframe:7,backfillFullHistory:!1,backfillDays:30,showAreaFill:!0,visibleDatasets:{overall:!0,moving:!0,noMove:!0,nmpz:!0},autoRefreshInterval:60,apiRequestDelay:250,backgroundOpacity:15,initialZoomDays:7},i={EXPAND:`<svg viewBox="0 0 24 24" fill="currentColor"><path d="M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z"></path></svg>`,COLLAPSE:`<svg viewBox="0 0 24 24" fill="currentColor"><path d="M8 19h3v-3h2v5H8v-2zm3-8h5v-2H8v5h2v-3zm6-8v3h3v2h-5V5h2zm-8 5H5V8h5v3z"></path></svg>`,SETTINGS:`<svg viewBox="0 0 24 24" fill="currentColor"><path d="M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61-.25-1.17-.59-1.69-.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19-.15-.24-.42-.12-.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.23.09.49 0 .61-.22l2-3.46c.12-.22-.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z"></path></svg>`,GITHUB:`<svg viewBox="0 0 16 16" fill="currentColor"><path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"></path></svg>`,RESYNC:`<svg viewBox="0 0 24 24" fill="currentColor"><path d="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"></path></svg>`},a={overall:{label:`Overall`,color:`#FFFFFF`},moving:{label:`Moving`,color:`#4A90E2`},noMove:{label:`No Move`,color:`#F5A623`},nmpz:{label:`NMPZ`,color:`#BD10E0`}};async function o(){let t=await GM_getValue(e,r);return{...r,...t,visibleDatasets:{...r.visibleDatasets,...t.visibleDatasets}}}function s(e){return new Promise((t,n)=>{let r=setInterval(()=>{e()&&(clearInterval(r),t())},200);setTimeout(()=>{clearInterval(r),n(Error(`Guesslytics: Timed out.`))},2e4)})}let c=e=>new Promise(t=>setTimeout(t,e)),l=e=>e?new Date(e).toLocaleString():`N/A`;function u(){try{return JSON.parse(document.getElementById(`__NEXT_DATA__`)?.innerHTML||`{}`)?.props?.accountProps?.account?.user?.userId||null}catch{return null}}async function d(){return await GM_getValue(t,{overall:[],moving:[],noMove:[],nmpz:[]})}async function f(e){await GM_setValue(t,e)}function p(e){return e===`StandardDuels`?`moving`:e===`NoMoveDuels`?`noMove`:e===`NmpzDuels`?`nmpz`:null}let m=0,h=250,g=Promise.resolve(),_=!1;async function v(e,t=3,n=1e3,r=250){return new Promise(i=>(g=g.then(async()=>{try{let a=Math.max(r,h),o=Date.now()-m;if(m>0&&o<1e4){let e=Math.min(5e3,1e4-o);console.log(`Guesslytics: Adding extra delay of ${e}ms due to recent rate limiting`),await c(e)}await c(a),h>250&&o>3e4&&(h=Math.max(250,Math.floor(h*.9)),console.log(`Guesslytics: Reducing global delay to ${h}ms`)),_=!0;let s=await y(e,t,n);i(s)}catch(e){console.error(`Guesslytics: Error in request queue`,e),i(null)}finally{_=!1}}),g))}async function y(e,t=3,n=1e3){for(let r=0;r<t;r++)try{return await new Promise((t,n)=>{GM_xmlhttpRequest({method:`GET`,url:e,responseType:`json`,timeout:15e3,onload:e=>{e.status>=200&&e.status<300?t(e.response):[429,500,502,503,504].includes(e.status)?n(Error(`API temporary error: ${e.status}`)):t(null)},onerror:e=>n(Error(`Network Error: ${e}`)),ontimeout:()=>n(Error(`Request timed out`))})})}catch(e){let i=e.message?.includes(`429`);if(i){m=Date.now(),h=Math.min(5e3,h*2),console.warn(`Guesslytics: Rate limited. Increasing global delay to ${h}ms`);let e=document.getElementById(`guesslyticsStatus`);e&&(e.innerHTML=`Rate limited, retrying...`)}if(r===t-1)return console.error(`Guesslytics: API request failed after all retries.`,e),null;let a=i?Math.max(n,2e3):n;console.warn(`Guesslytics: API request failed. Retrying in ${a/1e3}s...`,e.message),await c(a),n*=2}return null}async function b(e,t,n){console.log(`Guesslytics: Processing games from feed entries`,{entriesCount:e.length,timestamp:new Date().toISOString()});let r=await d(),i=new Set,a={overall:new Date(0),moving:new Date(0),noMove:new Date(0),nmpz:new Date(0)};for(let e in r){let t=r[e];for(let n of t){i.add(n.gameId);let t=new Date(n.timestamp);t>a[e]&&(a[e]=t)}}console.log(`Guesslytics: Existing game IDs`,{count:i.size,mostRecentTimestamps:Object.fromEntries(Object.entries(a).map(([e,t])=>[e,t.toISOString()]))});let o=!1,s=e.filter(e=>e.type===7&&typeof e.payload==`string`).flatMap(e=>{try{return JSON.parse(e.payload)}catch(e){return console.error(`Guesslytics: Failed to parse payload`,e),[]}});console.log(`Guesslytics: Parsed game activities`,{count:s.length});let c=s.filter(e=>e.type===6&&e.payload.competitiveGameMode&&e.payload.gameMode===`Duels`);console.log(`Guesslytics: Found duel games`,{count:c.length}),c.sort((e,t)=>new Date(t.time).getTime()-new Date(e.time).getTime());for(let e of c){let s=e.payload.gameId,c=new Date(e.time);if(console.log(`Guesslytics: Processing game ${s}`,{time:c.toISOString(),competitiveGameMode:e.payload.competitiveGameMode}),i.has(s)){console.log(`Guesslytics: Game ${s} already exists, skipping`);continue}if(r.overall.length>0&&c<a.overall){console.log(`Guesslytics: Game ${s} is older than most recent data, skipping`);continue}try{console.log(`Guesslytics: Fetching duel data for game ${s}`);let i=await v(`https://game-server.geoguessr.com/api/duels/${s}`,3,1e3,n);if(!i){console.log(`Guesslytics: No duel data found for game ${s}`);continue}console.log(`Guesslytics: Duel data received for game ${s}`,{teamsCount:i.teams.length,playersCount:i.teams.flatMap(e=>e.players).length});let l=i.teams.flatMap(e=>e.players).find(e=>e.playerId===t);if(!l){console.log(`Guesslytics: Player ${t} not found in game ${s}`);continue}console.log(`Guesslytics: Found player in game ${s}`,{hasProgressChange:!!l.progressChange,hasRankedSystemProgress:!!l.progressChange?.rankedSystemProgress});let u=l.progressChange?.rankedSystemProgress;if(u){let t=p(u.gameMode);console.log(`Guesslytics: Progress data for game ${s}`,{gameMode:u.gameMode,modeKey:t,ratingAfter:u.ratingAfter,gameModeRatingAfter:u.gameModeRatingAfter}),u.ratingAfter!=null&&(r.overall.push({timestamp:e.time,rating:u.ratingAfter,gameId:s}),console.log(`Guesslytics: Added overall rating for game ${s}`,{timestamp:e.time,rating:u.ratingAfter})),t&&u.gameModeRatingAfter!=null&&(r[t].push({timestamp:e.time,rating:u.gameModeRatingAfter,gameId:s}),console.log(`Guesslytics: Added ${t} rating for game ${s}`,{timestamp:e.time,rating:u.gameModeRatingAfter})),o=!0,c>a.overall&&(a.overall=c),t&&c>a[t]&&(a[t]=c)}else console.log(`Guesslytics: No progress data found for game ${s}`)}catch(e){console.error(`Guesslytics: Failed to process duel ${s}.`,e)}}if(o){for(let e in console.log(`Guesslytics: New data added, sorting and saving`),r)r[e].sort((e,t)=>new Date(e.timestamp).getTime()-new Date(t.timestamp).getTime()),console.log(`Guesslytics: Sorted ${e} data`,{count:r[e].length,oldestTimestamp:r[e].length>0?r[e][0].timestamp:`none`,newestTimestamp:r[e].length>0?r[e][r[e].length-1].timestamp:`none`});await f(r),console.log(`Guesslytics: Data saved successfully`)}else console.log(`Guesslytics: No new data added`);return o}async function x(e,t=!1,n,r){console.log(`Guesslytics: Checking for updates`,{userId:e,isManual:t,timestamp:new Date().toISOString()}),r(!0,t?`Syncing...`:``);try{let i=await d(),a=i.overall.length>0?i.overall[i.overall.length-1]:null;console.log(`Guesslytics: Most recent stored game`,{exists:!!a,timestamp:a?.timestamp,gameId:a?.gameId}),console.log(`Guesslytics: Fetching feed data`);let o=await v(`https://www.geoguessr.com/api/v4/feed/private`,3,1e3,n);if(!o){console.error(`Guesslytics: Failed to fetch feed data`),r(!1,`Error`);return}console.log(`Guesslytics: Feed data received`,{entriesCount:o.entries.length,hasPaginationToken:!!o.paginationToken}),console.log(`Guesslytics: Processing games from feed`);let s=await b(o.entries,e,n);if(console.log(`Guesslytics: Games processed`,{newDataAdded:s}),!s&&o.paginationToken){console.log(`Guesslytics: No new data found in first page, checking more pages`);let r=o.paginationToken,i=1,a=t?5:2;for(;r&&i<a;){i++,console.log(`Guesslytics: Fetching additional page ${i}`);let t=await v(`https://www.geoguessr.com/api/v4/feed/private?paginationToken=${r}`,3,1e3,n);if(!t)break;let a=await b(t.entries,e,n);if(s||=a,console.log(`Guesslytics: Additional page processed`,{page:i,newDataAdded:a,hasMorePages:!!t.paginationToken}),a||!t.paginationToken)break;r=t.paginationToken}}let c=s?`✓ Synced`:t?`✓ Up to date`:``;console.log(`Guesslytics: Updating backfill state`),await GM_setValue(`guesslyticsBackfillState`,{...await GM_getValue(`guesslyticsBackfillState`,{}),lastSyncTimestamp:Date.now()}),console.log(`Guesslytics: Update complete`,{statusText:c}),r(!1,c)}catch(e){console.error(`Guesslytics: Background refresh failed.`,e),r(!1,`Error`)}}let S=null,C=!1,w=null,T=null,E=!1;function D(e,t=``){E=e;let n=document.getElementById(`guesslyticsStatus`),r=document.getElementById(`guesslyticsTimer`),i=document.getElementById(`guesslyticsResyncBtn`);if(!(!n||!r||!i))if(i.disabled=E,E)T&&clearInterval(T),r.style.display=`none`,n.innerHTML=`${t||`Syncing...`} <div class="gg-spinner"></div>`;else{n.innerText=t;let e=u();r.style.display=`none`,setTimeout(()=>{n&&n.innerText===t&&(n.innerText=``),e&&M(e,{autoRefreshInterval:60},async()=>{})},3e3)}}function O(e,t){let n=document.querySelector(`[class*="division-header_right"]`);if(!n||document.getElementById(`guesslyticsContainer`))return;let r=document.createElement(`div`);if(r.id=`guesslyticsContainer`,r.innerHTML=`
        <div class="guesslytics-header">
            <div class="guesslytics-title-wrapper"><h3>RATING HISTORY</h3><span id="guesslyticsStatus"></span><span id="guesslyticsTimer"></span></div>
            <div class="chart-buttons">
                <button id="guesslyticsResyncBtn" title="Manual Sync">${i.RESYNC}</button>
                <button id="guesslyticsToggleBtn" title="Toggle Graph Size">${i.EXPAND}</button>
                <button id="guesslyticsSettingsBtn" title="Settings">${i.SETTINGS}</button>
            </div>
        </div>
        <div id="graphWrapper"><div id="guesslyticsStats"></div><canvas id="guesslyticsCanvas"></canvas></div>`,n.innerHTML=``,n.appendChild(r),!document.getElementById(`guesslyticsSettingsPanel`)){let e=document.createElement(`div`);e.id=`guesslyticsSettingsPanel`,document.body.appendChild(e)}document.getElementById(`guesslyticsToggleBtn`).onclick=()=>{C=!C,r.classList.toggle(`expanded`,C),document.getElementById(`guesslyticsToggleBtn`).innerHTML=C?i.COLLAPSE:i.EXPAND,document.getElementById(`guesslyticsStats`).style.display=C?`flex`:`none`,C&&k()},document.getElementById(`guesslyticsSettingsBtn`).onclick=()=>{document.getElementById(`guesslyticsSettingsPanel`).style.display=`block`,A(t)},document.getElementById(`guesslyticsResyncBtn`).onclick=async()=>{E||!e||await x(e,!0,t.apiRequestDelay,D)},GM_addStyle(`
        #guesslyticsContainer { display: flex; flex-direction: column; width: 100%; height: 210px; background: rgba(28,28,28,${t.backgroundOpacity/100}); border-radius: 8px; border: 1px solid #444; transition: height 0.3s ease, background-color 0.3s ease; box-sizing: border-box; }
        #guesslyticsContainer.expanded { height: 400px; }
        .guesslytics-header { display: flex; justify-content: space-between; align-items: center; padding: 10px 15px; border-bottom: 1px solid #444; flex-shrink: 0; }
        .guesslytics-title-wrapper { display: flex; align-items: center; gap: 10px; color: #fff; font-size: 14px; }
        #guesslyticsStatus { font-size: 12px; color: #00BCD4; display: flex; align-items: center; gap: 5px; }
        #guesslyticsTimer { font-size: 11px; color: #888; }
        #graphWrapper { display: flex; flex-direction: column; flex-grow: 1; min-height: 0; padding: 5px 10px 10px 5px; box-sizing: border-box; }
        #guesslyticsStats { display: none; flex-wrap: wrap; justify-content: space-around; padding: 5px 10px; gap: 10px; border-bottom: 1px solid #444; margin-bottom: 5px; flex-shrink: 0; }
        .stat-item { text-align: center; } .stat-item .value { font-size: 16px; font-weight: bold; color: #fff; } .stat-item .label { font-size: 11px; color: #aaa; } .stat-item .value.positive { color: #4CAF50; } .stat-item .value.negative { color: #F44336; }
        #guesslyticsCanvas { flex-grow: 1; min-height: 0; }
        .chart-buttons { display: flex; gap: 5px; } .chart-buttons button { background: #333; border: 1px solid #555; border-radius: 5px; cursor: pointer; color: white; width: 24px; height: 24px; padding: 3px; }
        .chart-buttons button:hover { background: #444; } .chart-buttons button:disabled { opacity: 0.5; cursor: not-allowed; }
        /* Settings Modal */
        #guesslyticsSettingsPanel { display: none; }
        #guesslyticsSettingsOverlay { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.7); z-index: 10000; }
        #guesslyticsSettingsModal { position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 400px; background: #1c1c1c; color: #fff; padding: 25px; border-radius: 8px; z-index: 10001; border: 1px solid #444; }
        #guesslyticsSettingsModal h2 { margin-top: 0; text-align: center; }
        .settings-section { margin-bottom: 10px; } .settings-section h4 { font-size: 14px; margin: 0 0 8px; border-bottom: 1px solid #444; padding-bottom: 4px; }
        .settings-row { display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px; font-size: 13px; }
        #backfillDaysRow { display: flex; } /* Visible by default */
        #backfillDaysRow.hidden { display: none !important; } /* Hide when given the hidden class */
        .settings-row input { width: 60px; text-align: center; background: #333; border: 1px solid #555; color: #fff; border-radius: 4px; padding: 4px; }
        .settings-row input[type="checkbox"] { width: 16px; height: 16px; accent-color: #00BCD4; }
        .graph-toggle-row { display: grid; grid-template-columns: 1fr 1fr; gap: 5px 15px; } .graph-toggle-item { display: flex; align-items: center; justify-content: space-between; }
        .color-swatch { width: 12px; height: 12px; border-radius: 3px; margin-right: 8px; border: 1px solid #888; }
        .settings-actions { display: flex; gap: 10px; margin-top: 10px; }
        .settings-actions button { flex-grow: 1; padding: 8px; border: none; color: #fff; font-weight: bold; cursor: pointer; border-radius: 4px; }
        #clearDataBtn { background: #c53030; } #resetSettingsBtn { background: #717171; }
        .settings-stats { font-size: 13px; color: #ccc; border-top: 1px solid #444; padding-top: 10px; margin-top: 10px; }
        .settings-footer { text-align: center; font-size: 11px; color: #888; margin-top: 10px; border-top: 1px solid #444; padding-top: 10px; }
        .settings-footer a { color: #aaa; text-decoration: none; display: inline-flex; align-items: center; gap: 4px; } .settings-footer svg { width: 14px; height: 14px; }
        /* Spinner */
        .gg-spinner { animation: gg-spinner 1s linear infinite; box-sizing: border-box; position: relative; display: block; transform: scale(var(--ggs,0.7)); width: 16px; height: 16px; border: 2px solid; border-top-color: transparent; border-radius: 50%; }
        @keyframes gg-spinner { 0% { transform: rotate(0deg) } 100% { transform: rotate(360deg) } }
    `)}async function k(){if(!C||!S)return;let e=document.getElementById(`guesslyticsStats`);if(!e)return;let t=await d(),n=S.scales.x.min,r=S.scales.x.max,i=t.overall.filter(e=>{let t=new Date(e.timestamp).getTime();return t>=n&&t<=r});if(i.length<2){e.innerHTML=`<div class="stat-item"><div class="label">Not enough data in this view for stats</div></div>`;return}let a=i[i.length-1],o=i[i.length-2],s=a.rating-o.rating,c=`<div class="value ${s>=0?`positive`:`negative`}">${s>=0?`+`:``}${s}</div>`,l=0,u=0,f=0,p=0,m=i[0].rating;for(let e=1;e<i.length;e++){let t=i[e].rating-i[e-1].rating;t>0&&(l++,f+=t),t<0&&(u++,p+=t),i[e].rating>m&&(m=i[e].rating)}let h=i[i.length-1].rating-i[0].rating,g=i.length-1,_=g>0?(h/g).toFixed(2):`0`,v=`<div class="value ${Number(_)>=0?`positive`:`negative`}">${Number(_)>=0?`+`:``}${_}</div>`,y=l+u>0?Math.round(l/(l+u)*100):0,b=``;y>50&&(b=`positive`),y<50&&(b=`negative`);let x=`<div class="value ${b}">${y}%</div>`,w=l>0?(f/l).toFixed(2):`0`,T=u>0?(p/u).toFixed(2):`0`;e.innerHTML=`
        <div class="stat-item">${c}<div class="label">Last Change</div></div>
        <div class="stat-item">${v}<div class="label">Avg. Net/Game</div></div>
        <div class="stat-item">${x}<div class="label">Win Rate</div></div>
        <div class="stat-item"><div class="value positive">+${w}</div><div class="label">Avg Gain</div></div>
        <div class="stat-item"><div class="value negative">${T}</div><div class="label">Avg Loss</div></div>
        <div class="stat-item"><div class="value">${m}</div><div class="label">Peak Rating</div></div>`}async function A(e){let t=document.getElementById(`guesslyticsSettingsPanel`);if(!t)return;let r=await d(),o=await GM_getValue(n,{lastLimitDays:0,lastSyncTimestamp:null}),s={points:r.overall.length,oldest:r.overall.length>0?l(r.overall[0].timestamp):`N/A`,newest:r.overall.length>0?l(r.overall[r.overall.length-1].timestamp):`N/A`,lastSync:l(o.lastSyncTimestamp)};t.innerHTML=`
        <div id="guesslyticsSettingsOverlay"></div>
        <div id="guesslyticsSettingsModal">
            <h2>Guesslytics Settings</h2>
            <div class="settings-section"><h4>Graphs</h4>
                <div class="graph-toggle-row">${Object.entries(a).map(([t,n])=>`<div class="graph-toggle-item"><label for="ds_${t}" style="display:flex;align-items:center;">
                    <span class="color-swatch" style="background:${n.color};"></span>${n.label}</label>
                    <input type="checkbox" id="ds_${t}" data-key="${t}" ${e.visibleDatasets[t]?`checked`:``}>
                    </div>`).join(``)}
                </div>
                <div class="settings-row"><label for="showAreaFill">Show Area Fill</label>
                <input type="checkbox" id="showAreaFill" ${e.showAreaFill?`checked`:``}></div></div>
            <div class="settings-section"><h4>Data Sync</h4>
                <div class="settings-row"><label for="backfillFull">Sync Full History</label>
                <input type="checkbox" id="backfillFull" ${e.backfillFullHistory?`checked`:``}></div>
                <div class="settings-row" id="backfillDaysRow"><label for="backfillDays">Sync history for (days)</label>
                <input type="number" id="backfillDays" value="${e.backfillDays}" min="1"></div></div>
            <div class="settings-section"><h4>Advanced</h4>
                <div class="settings-row"><label for="initialZoomDays">Initial Zoom (days)</label>
                <input type="number" id="initialZoomDays" value="${e.initialZoomDays||7}" min="1"></div>
                <div class="settings-row"><label for="autoRefreshInterval">Refresh Interval (sec)</label>
                <input type="number" id="autoRefreshInterval" value="${e.autoRefreshInterval}" min="10"></div>
                <div class="settings-row"><label for="apiRequestDelay">API Request Delay (ms)</label>
                <input type="number" id="apiRequestDelay" value="${e.apiRequestDelay}" min="50"></div>
                <div class="settings-row"><label for="bgOpacity">Background Opacity (%)</label>
                <input type="range" id="bgOpacity" value="${e.backgroundOpacity}" min="0" max="100"></div></div>
            <div class="settings-stats"><b>Games Tracked:</b> ${s.points} | <b>Last Sync:</b> ${s.lastSync}<br>
            <b>Date Range:</b> ${s.oldest} – ${s.newest}</div>
            <div class="settings-actions"><button id="resetSettingsBtn">Reset Settings</button>
            <button id="clearDataBtn">Clear All Data</button></div>
            <div class="settings-footer"><a href="https://github.com/Avanatiker/Guesslytics" target="_blank">
            ${i.GITHUB} Guesslytics v${GM_info.script.version} by Constructor</a></div>
        </div>`,document.getElementById(`guesslyticsSettingsOverlay`).onclick=()=>t.style.display=`none`;let c=document.getElementById(`backfillDaysRow`),u=document.getElementById(`backfillFull`);c&&u&&(e.backfillFullHistory?c.classList.add(`hidden`):c.classList.remove(`hidden`),u.onchange=()=>{c&&(u.checked?c.classList.add(`hidden`):c.classList.remove(`hidden`))});let f=new CustomEvent(`guesslyticsSettingsRendered`);document.dispatchEvent(f)}function j(e,t){let n=!S||S.data.datasets.every(e=>e.data.length===0),r=S&&!n?{min:S.scales.x.min,max:S.scales.x.max}:null;S&&S.destroy();let i=document.getElementById(`guesslyticsCanvas`);if(!i)return;i.style.cursor=`grab`;let o=e.overall.map(e=>new Date(e.timestamp).getTime()),s=e.overall.length>0?Math.min(...o):null,c=e.overall.length>0?Math.max(...o):null,u=Object.keys(a).map(n=>{let r=a[n],o=i.getContext(`2d`).createLinearGradient(0,0,0,C?400:210);return o.addColorStop(0,`${r.color}55`),o.addColorStop(1,`${r.color}05`),{label:r.label,data:e[n].map(e=>({x:new Date(e.timestamp).getTime(),y:e.rating,gameId:e.gameId})),borderColor:r.color,borderWidth:n===`overall`?2.5:2,pointRadius:0,pointHoverRadius:6,pointHoverBorderColor:`#fff`,pointHoverBackgroundColor:r.color,fill:t.showAreaFill,backgroundColor:o,tension:0,hidden:!t.visibleDatasets[n]}}),d=!1,f={animation:!1,responsive:!0,maintainAspectRatio:!1,interaction:{mode:`x`,intersect:!1},onClick:(e,t)=>{if(!d&&t.length>0){let{datasetIndex:e,index:n}=t[0],r=S.data.datasets[e].data[n].gameId;r&&window.open(`https://www.geoguessr.com/duels/${r}`,`_blank`)}},plugins:{title:{display:!1},legend:{display:!1},tooltip:{position:`nearest`,callbacks:{title:e=>l(e[0].parsed.x),label:()=>null,afterBody:e=>{let t=new Set,n=[];return e.forEach(e=>{t.has(e.dataset.label)||(t.add(e.dataset.label),n.push(`${e.dataset.label}: ${e.parsed.y}`))}),n}}}},scales:{x:{type:`time`,time:{unit:`day`},ticks:{color:`#aaa`},grid:{color:`rgba(255,255,255,0.1)`}},y:{ticks:{color:`#aaa`},grid:{color:`rgba(255,255,255,0.1)`}}}};if(r?.min&&r?.max)f.scales.x.min=r.min,f.scales.x.max=r.max;else if(e.overall.length>=1){let n=e.overall.length>0?new Date(e.overall[e.overall.length-1].timestamp).getTime():Date.now(),r=new Date(n);r.setDate(r.getDate()-(t.initialZoomDays||7)),f.scales.x.min=r.getTime(),f.scales.x.max=n}let p={id:`crosshairLine`,afterDatasetsDraw:e=>{let{tooltip:t,ctx:n,chartArea:{top:r,bottom:i}}=e;if(t.getActiveElements()?.length>0){let e=t.getActiveElements()[0].element.x;n.save(),n.beginPath(),n.moveTo(e,r),n.lineTo(e,i),n.lineWidth=1,n.strokeStyle=`rgba(255, 255, 255, 0.5)`,n.stroke(),n.restore()}}};S=new Chart(i,{type:`line`,data:{datasets:u},options:f,plugins:[p]});let m=!1,h=0,g=0,_=()=>{m&&(m=!1,i.style.cursor=`grab`,C&&k(),setTimeout(()=>d=!1,50))};i.onmousedown=e=>{m=!0,h=e.clientX,g=e.clientX,d=!1,i.style.cursor=`grabbing`},i.onmouseup=_,i.onmouseleave=_,i.onmousemove=t=>{if(m){Math.abs(t.clientX-g)>5&&(d=!0);let n=t.clientX-h;h=t.clientX;let r=S.scales.x,i=r.min-(r.max-r.min)*(n/r.width),a=r.max-(r.max-r.min)*(n/r.width);if(e.overall.length>1){if(i<s){let e=s-i;i+=e,a+=e}if(a>c){let e=a-c;i-=e,a-=e}}S.options.scales.x.min=i,S.options.scales.x.max=a,S.update(`none`)}},i.onwheel=t=>{t.preventDefault();let n=t.deltaY<0?.85:1.15,r=S.scales.x,i=r.getValueForPixel(t.offsetX),a=i-(i-r.min)*n,o=i+(r.max-i)*n;e.overall.length>1&&(a<s&&(a=s),o>c&&(o=c)),!(o-a<1e3*60*5)&&(S.options.scales.x.min=a,S.options.scales.x.max=o,S.update(`none`),C&&k())},C&&k()}function M(e,t,n){if(w&&clearInterval(w),T&&clearInterval(T),!e||t.autoRefreshInterval<=0||E){let e=document.getElementById(`guesslyticsTimer`);e&&(e.style.display=`none`);return}let r=document.getElementById(`guesslyticsTimer`);if(!r)return;r.style.display=`inline`;let i=Date.now()+t.autoRefreshInterval*1e3,a=Math.round((i-Date.now())/1e3);if(a>0){let e=Math.floor(a/60),t=a%60;r.innerText=e>0?`(Next sync in ${e}m ${t}s)`:`(Next sync in ${t}s)`}w=window.setInterval(()=>{n(e,!1),i=Date.now()+t.autoRefreshInterval*1e3},t.autoRefreshInterval*1e3),T=window.setInterval(()=>{let e=Math.round((i-Date.now())/1e3);if(e>0){let t=Math.floor(e/60),n=e%60;r.innerText=t>0?`(Next sync in ${t}m ${n}s)`:`(Next sync in ${n}s)`}},1e3)}(async()=>{"use strict";let t={...r},i=!1,a=!1;async function l(e,r){if(a){console.log(`Guesslytics: Backfill already in progress, skipping`);return}console.log(`Guesslytics: Starting backfill history`,{fullHistory:t.backfillFullHistory,daysLimit:t.backfillDays,initialToken:r}),a=!0,D(!0);let i=r,o=0,s=new Date,l=!1;t.backfillFullHistory?console.log(`Guesslytics: Full history backfill enabled, no cutoff date`):(s.setDate(s.getDate()-t.backfillDays),console.log(`Guesslytics: Backfill cutoff date set to`,{date:s.toISOString(),daysBack:t.backfillDays}));let u=await d();for(console.log(`Guesslytics: Initial data stats`,{totalGames:u.overall.length,oldestGame:u.overall.length>0?u.overall[0].timestamp:`none`,newestGame:u.overall.length>0?u.overall[u.overall.length-1].timestamp:`none`});i&&o<200;){o++;try{console.log(`Guesslytics: Fetching backfill page ${o}`);let n=await v(`https://www.geoguessr.com/api/v4/feed/private?paginationToken=${i}`,3,1e3,t.apiRequestDelay);if(!n){console.log(`Guesslytics: No feed data returned, stopping backfill`);break}console.log(`Guesslytics: Processing backfill page ${o}`,{entriesCount:n.entries.length,hasPaginationToken:!!n.paginationToken});let r=await b(n.entries,e,t.apiRequestDelay);l||=r;let a=await d(),u=a.overall.length>0?new Date(a.overall[0].timestamp).toLocaleDateString():``;D(!0,`Syncing... (${a.overall.length} found, to ${u})`),j(a,t);let f=a.overall[0];if(!t.backfillFullHistory&&f&&new Date(f.timestamp)<s){console.log(`Guesslytics: Reached cutoff date, stopping backfill`,{oldestGameDate:new Date(f.timestamp).toISOString(),cutoffDate:s.toISOString()});break}if(!r&&!t.backfillFullHistory&&o>1){console.log(`Guesslytics: No new data found in page ${o}, stopping backfill`);break}i=n.paginationToken,i||console.log(`Guesslytics: No more pagination tokens, reached end of feed`),await c(1e3)}catch(e){console.error(`Guesslytics: Failed to fetch a history page.`,e);break}}console.log(`Guesslytics: Backfill complete`,{pagesProcessed:o,newDataFound:l,fullHistory:t.backfillFullHistory,daysLimit:t.backfillDays}),await GM_setValue(n,{lastLimitDays:t.backfillFullHistory?9999:t.backfillDays,lastSyncTimestamp:Date.now()}),a=!1,D(!1,l?`✓ Synced`:`✓ Up to date`)}async function p(){if(i){console.log(`Guesslytics: UI already initialized, skipping`);return}try{await s(()=>document.querySelector(`[class*="division-header_right"]`)!==null);let e=u();if(!e){console.error(`Guesslytics: Failed to get user ID`);return}i=!0,console.log(`Guesslytics: Initializing UI for user ${e}`),O(e,t);let r=await d();j(r,t);let o=await GM_getValue(n,{lastLimitDays:0,lastSyncTimestamp:null}),c=t.backfillFullHistory?9999:t.backfillDays,f=o.lastSyncTimestamp||0,p=Date.now()-f,h=p/(1e3*60*60),_=c>o.lastLimitDays,y=h>24,b=r.overall.length===0,x=_||y||b;if(console.log(`Guesslytics: Backfill check`,{currentLimit:c,lastLimitDays:o.lastLimitDays,limitIncreased:_,hoursSinceLastSync:h,longTimeSinceSync:y,noDataYet:b,needsBackfill:x}),x){console.log(`Guesslytics: Backfill needed, fetching initial feed data`);let n=await v(`https://www.geoguessr.com/api/v4/feed/private`);if(n?.paginationToken){console.log(`Guesslytics: Starting backfill with pagination token`);try{await l(e,n.paginationToken)}catch(e){console.error(`Guesslytics: Error during backfill`,e),a=!1,D(!1,`Error during backfill`)}}else console.log(`Guesslytics: No pagination token, starting refresh cycle`),M(e,t,g)}else console.log(`Guesslytics: No backfill needed, checking for updates`),await g(e,!1),M(e,t,g);m(e)}catch(e){console.error(`Guesslytics: Error initializing UI`,e)}}function m(i){let a=async(n=!1)=>{let r=t.backfillFullHistory?9999:t.backfillDays;t.showAreaFill=document.getElementById(`showAreaFill`).checked,Object.keys(t.visibleDatasets).forEach(e=>{let n=document.getElementById(`ds_${e}`);n&&(t.visibleDatasets[e]=n.checked)}),t.backfillFullHistory=document.getElementById(`backfillFull`).checked,t.backfillDays=parseInt(document.getElementById(`backfillDays`).value,10),t.initialZoomDays=parseInt(document.getElementById(`initialZoomDays`).value,10),t.autoRefreshInterval=parseInt(document.getElementById(`autoRefreshInterval`).value,10),t.apiRequestDelay=parseInt(document.getElementById(`apiRequestDelay`).value,10),t.backgroundOpacity=parseInt(document.getElementById(`bgOpacity`).value,10),await GM_setValue(e,t);let a=document.getElementById(`guesslyticsContainer`);a&&(a.style.backgroundColor=`rgba(28,28,28,${t.backgroundOpacity/100})`),j(await d(),t),M(i,t,g);let o=t.backfillFullHistory?9999:t.backfillDays;if(n&&o>r){let e=await v(`https://www.geoguessr.com/api/v4/feed/private`);e?.paginationToken&&l(i,e.paginationToken)}},s=()=>{console.log(`Guesslytics: Attaching settings panel handlers`),document.querySelectorAll(`#guesslyticsSettingsModal input:not(#backfillFull)`).forEach(e=>{e.onchange=()=>a([`backfillDays`].includes(e.id))});let i=document.getElementById(`backfillFull`);if(i){let e=i.onchange;i.onchange=t=>{e&&e.call(i,t),a(!0)}}let s=document.getElementById(`clearDataBtn`);s?(console.log(`Guesslytics: Attaching clearDataBtn handler`),s.onclick=async()=>{confirm(`Are you sure you want to delete all stored rating data? This action cannot be undone.`)&&(await f({overall:[],moving:[],noMove:[],nmpz:[]}),await GM_setValue(n,{lastLimitDays:0,lastSyncTimestamp:null}),window.location.reload())}):console.log(`Guesslytics: clearDataBtn not found`);let c=document.getElementById(`resetSettingsBtn`);c?(console.log(`Guesslytics: Attaching resetSettingsBtn handler`),c.onclick=async()=>{confirm(`Are you sure you want to reset all settings to their defaults?`)&&(await GM_setValue(e,r),t=await o(),A(t))}):console.log(`Guesslytics: resetSettingsBtn not found`)};s(),document.addEventListener(`guesslyticsSettingsRendered`,()=>{console.log(`Guesslytics: Settings panel rendered, attaching handlers`),s()})}function h(){let e=null,t=new MutationObserver(()=>{let t=window.location.pathname===`/multiplayer`,n=document.getElementById(`guesslyticsContainer`);t&&!n&&!i&&(e&&clearTimeout(e),e=window.setTimeout(()=>{p()},500))});t.observe(document.body,{childList:!0,subtree:!0})}async function g(e,n){await x(e,n,t.apiRequestDelay,D),j(await d(),t)}async function _(){console.log(`Guesslytics v${GM_info.script.version} Initializing...`),t=await o(),Chart.defaults.font.family=`'ggFont', sans-serif`,h(),window.location.pathname===`/multiplayer`&&p()}_()})()})();